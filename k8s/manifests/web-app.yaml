apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-app
  namespace: bitcoin-prediction
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web-app
  template:
    metadata:
      labels:
        app: web-app
    spec:
      containers:
      - name: web-app
        image: web-app:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 5000
        env:
        - name: PYTHONUNBUFFERED
          valueFrom:
            configMapKeyRef:
              name: bitcoin-config
              key: pythonunbuffered
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef:
              name: bitcoin-config
              key: service-name
        - name: KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            configMapKeyRef:
              name: bitcoin-config
              key: kafka-bootstrap-servers
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        volumeMounts:
        - name: bitcoin-data
          mountPath: /app/data
        livenessProbe:
          httpGet:
            path: /
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 10
          failureThreshold: 3
      volumes:
      - name: bitcoin-data
        persistentVolumeClaim:
          claimName: bitcoin-data-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: web-app
  namespace: bitcoin-prediction
spec:
  type: NodePort
  selector:
    app: web-app
  ports:
    - name: http
      port: 5000
      targetPort: 5000
      nodePort: 30001 