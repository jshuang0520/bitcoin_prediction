apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
  namespace: bitcoin-prediction
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
      - name: kafka
        image: bitnami/kafka:3.4
        ports:
        - containerPort: 29092
        env:
        - name: KAFKA_CFG_ZOOKEEPER_CONNECT
          valueFrom:
            configMapKeyRef:
              name: bitcoin-config
              key: kafka-zookeeper-connect
        - name: KAFKA_CFG_LISTENERS
          value: "PLAINTEXT://:29092"
        - name: KAFKA_CFG_ADVERTISED_LISTENERS
          value: "PLAINTEXT://kafka:29092"
        - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
          valueFrom:
            configMapKeyRef:
              name: bitcoin-config
              key: kafka-auto-create-topics-enable
        - name: KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR
          valueFrom:
            configMapKeyRef:
              name: bitcoin-config
              key: kafka-offsets-topic-replication-factor
        - name: KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR
          valueFrom:
            configMapKeyRef:
              name: bitcoin-config
              key: kafka-transaction-state-log-min-isr
        - name: KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
          valueFrom:
            configMapKeyRef:
              name: bitcoin-config
              key: kafka-transaction-state-log-replication-factor
        - name: ALLOW_PLAINTEXT_LISTENER
          value: "yes"
        # Performance optimization settings for real-time processing
        - name: KAFKA_CFG_NUM_NETWORK_THREADS
          value: "8"              # Increased network threads
        - name: KAFKA_CFG_NUM_IO_THREADS
          value: "8"              # Increased I/O threads
        - name: KAFKA_CFG_SOCKET_SEND_BUFFER_BYTES
          value: "102400"         # 100KB send buffer
        - name: KAFKA_CFG_SOCKET_RECEIVE_BUFFER_BYTES
          value: "102400"         # 100KB receive buffer
        - name: KAFKA_CFG_SOCKET_REQUEST_MAX_BYTES
          value: "104857600"      # 100MB max request
        - name: KAFKA_CFG_NUM_PARTITIONS
          value: "4"              # More partitions for better parallelism
        - name: KAFKA_CFG_DEFAULT_REPLICATION_FACTOR
          value: "1"              # Single node setup
        - name: KAFKA_CFG_LOG_FLUSH_INTERVAL_MESSAGES
          value: "1000"           # Flush every 1000 messages for better performance
        - name: KAFKA_CFG_LOG_FLUSH_INTERVAL_MS
          value: "1000"           # Flush every 1 second
        resources:
          requests:
            memory: "768Mi"       # Increased from 512Mi
            cpu: "500m"           # Increased from 250m for better throughput
          limits:
            memory: "1.5Gi"       # Increased from 1Gi (using dashboard resources)
            cpu: "1000m"          # Increased from 500m for real-time processing
        volumeMounts:
        - name: kafka-data
          mountPath: /bitnami/kafka
        livenessProbe:
          tcpSocket:
            port: 29092
          initialDelaySeconds: 45   # Slightly reduced for faster startup
          periodSeconds: 20         # More frequent health checks
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          tcpSocket:
            port: 29092
          initialDelaySeconds: 20   # Faster readiness check
          periodSeconds: 10
          timeoutSeconds: 10
          failureThreshold: 3
      volumes:
      - name: kafka-data
        persistentVolumeClaim:
          claimName: kafka-data-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: bitcoin-prediction
spec:
  selector:
    app: kafka
  ports:
    - name: kafka
      port: 29092
      targetPort: 29092 