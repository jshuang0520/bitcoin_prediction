apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
  namespace: bitcoin-prediction
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      priorityClassName: critical-priority
      containers:
      - name: kafka
        image: bitnami/kafka:3.4
        ports:
        - containerPort: 29092
        env:
        - name: KAFKA_CFG_ZOOKEEPER_CONNECT
          valueFrom:
            configMapKeyRef:
              name: bitcoin-config
              key: kafka-zookeeper-connect
        - name: KAFKA_CFG_LISTENERS
          value: "PLAINTEXT://:29092"
        - name: KAFKA_CFG_ADVERTISED_LISTENERS
          value: "PLAINTEXT://kafka:29092"
        - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
          valueFrom:
            configMapKeyRef:
              name: bitcoin-config
              key: kafka-auto-create-topics-enable
        - name: KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR
          valueFrom:
            configMapKeyRef:
              name: bitcoin-config
              key: kafka-offsets-topic-replication-factor
        - name: KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR
          valueFrom:
            configMapKeyRef:
              name: bitcoin-config
              key: kafka-transaction-state-log-min-isr
        - name: KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
          valueFrom:
            configMapKeyRef:
              name: bitcoin-config
              key: kafka-transaction-state-log-replication-factor
        - name: ALLOW_PLAINTEXT_LISTENER
          value: "yes"
        - name: KAFKA_CFG_NUM_NETWORK_THREADS
          value: "8"
        - name: KAFKA_CFG_NUM_IO_THREADS
          value: "8"
        - name: KAFKA_CFG_SOCKET_SEND_BUFFER_BYTES
          value: "102400"
        - name: KAFKA_CFG_SOCKET_RECEIVE_BUFFER_BYTES
          value: "102400"
        - name: KAFKA_CFG_SOCKET_REQUEST_MAX_BYTES
          value: "104857600"
        - name: KAFKA_CFG_NUM_PARTITIONS
          value: "3"
        - name: KAFKA_CFG_DEFAULT_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_CFG_MIN_INSYNC_REPLICAS
          value: "1"
        - name: KAFKA_CFG_COMPRESSION_TYPE
          value: "snappy"
        - name: KAFKA_CFG_BATCH_SIZE
          value: "16384"
        - name: KAFKA_CFG_LINGER_MS
          value: "5"
        - name: KAFKA_CFG_BUFFER_MEMORY
          value: "33554432"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        volumeMounts:
        - name: kafka-data
          mountPath: /bitnami/kafka
        livenessProbe:
          tcpSocket:
            port: 29092
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          tcpSocket:
            port: 29092
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 10
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: node.kubernetes.io/instance-type
                operator: In
                values: ["m5.large", "m5.xlarge", "c5.large", "c5.xlarge"]
      volumes:
      - name: kafka-data
        persistentVolumeClaim:
          claimName: kafka-data-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: bitcoin-prediction
spec:
  selector:
    app: kafka
  ports:
    - name: kafka
      port: 29092
      targetPort: 29092 