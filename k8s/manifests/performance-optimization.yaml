# Priority Classes for Resource Scheduling
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: critical-priority
value: 1000
globalDefault: false
description: "Critical services that must always have resources (ML processing, Kafka)"
---
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: high-priority
value: 500
globalDefault: false
description: "High priority services for real-time data processing"
---
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: normal-priority
value: 100
globalDefault: true
description: "Normal priority for user-facing services"
---
# Enhanced HPA for Bitcoin Forecast App (ML Workload)
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: bitcoin-forecast-app-hpa
  namespace: bitcoin-prediction
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: bitcoin-forecast-app
  minReplicas: 1
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 60  # Lower threshold for faster scaling
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 70  # Lower threshold for ML workloads
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60  # Fast scale-up for real-time processing
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300  # Slower scale-down to avoid thrashing
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
---
# Enhanced HPA for Data Collector (Real-time Ingestion)
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: data-collector-hpa
  namespace: bitcoin-prediction
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: data-collector
  minReplicas: 1
  maxReplicas: 2  # Limited scaling for data consistency
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 30  # Very fast scale-up for data ingestion
      policies:
      - type: Pods
        value: 1
        periodSeconds: 30
---
# Enhanced HPA for Web App (User-facing)
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: web-app-hpa
  namespace: bitcoin-prediction
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: web-app
  minReplicas: 1
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 60
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 70
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 25
        periodSeconds: 60
---
# Enhanced HPA for Dashboard
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: dashboard-hpa
  namespace: bitcoin-prediction
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: dashboard
  minReplicas: 1
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 65
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 75
---
# Enhanced Resource Quota for Performance
apiVersion: v1
kind: ResourceQuota
metadata:
  name: bitcoin-prediction-quota
  namespace: bitcoin-prediction
spec:
  hard:
    requests.cpu: "8"      # Increased from 4 for better performance
    requests.memory: 16Gi  # Increased from 8Gi for ML workloads
    limits.cpu: "16"       # Increased from 8 for peak performance
    limits.memory: 32Gi    # Increased from 16Gi for large datasets
    persistentvolumeclaims: "10"
    pods: "25"             # Increased from 20 for more replicas
---
# Performance-Optimized Limit Range
apiVersion: v1
kind: LimitRange
metadata:
  name: bitcoin-prediction-limits
  namespace: bitcoin-prediction
spec:
  limits:
  # Default limits for new containers
  - default:
      cpu: "1000m"         # Increased from 500m
      memory: "1Gi"        # Increased from 512Mi
    defaultRequest:
      cpu: "200m"          # Increased from 100m
      memory: "256Mi"      # Increased from 128Mi
    type: Container
  # Limits for critical services
  - max:
      cpu: "4000m"         # Allow up to 4 CPU cores for ML
      memory: "8Gi"        # Allow up to 8GB for ML workloads
    type: Container
---
# Pod Disruption Budget for High Availability
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: bitcoin-forecast-app-pdb
  namespace: bitcoin-prediction
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: bitcoin-forecast-app
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: web-app-pdb
  namespace: bitcoin-prediction
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: web-app
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: kafka-pdb
  namespace: bitcoin-prediction
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: kafka 