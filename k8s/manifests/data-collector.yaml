apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-collector
  namespace: bitcoin-prediction
spec:
  replicas: 1
  selector:
    matchLabels:
      app: data-collector
  template:
    metadata:
      labels:
        app: data-collector
    spec:
      priorityClassName: high-priority
      containers:
      - name: data-collector
        image: data-collector:latest
        imagePullPolicy: Never
        env:
        - name: PYTHONUNBUFFERED
          valueFrom:
            configMapKeyRef:
              name: bitcoin-config
              key: pythonunbuffered
        - name: KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            configMapKeyRef:
              name: bitcoin-config
              key: kafka-bootstrap-servers
        - name: KAFKA_TOPIC
          valueFrom:
            configMapKeyRef:
              name: bitcoin-config
              key: kafka-topic
        - name: PYTHONOPTIMIZE
          value: "1"
        - name: PYTHONDONTWRITEBYTECODE
          value: "1"
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        volumeMounts:
        - name: bitcoin-data
          mountPath: /app/data
        livenessProbe:
          exec:
            command:
            - python
            - -c
            - "import sys; sys.exit(0)"
          initialDelaySeconds: 15
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - python
            - -c
            - "import sys; sys.exit(0)"
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: node.kubernetes.io/instance-type
                operator: In
                values: ["m5.large", "m5.xlarge", "c5.large", "c5.xlarge"]
      volumes:
      - name: bitcoin-data
        persistentVolumeClaim:
          claimName: bitcoin-data-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: data-collector
  namespace: bitcoin-prediction
spec:
  selector:
    app: data-collector
  ports:
    - port: 5000
      targetPort: 5000 